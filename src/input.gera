
mod obem::input

use obem::internal::input::*


pub val MOUSE_LEFT = 0
pub val MOUSE_SCROLL = 1
pub val MOUSE_RIGHT = 2
pub val MOUSE_BACK = 3
pub val MOUSE_FORWARD = 4

pub proc mouse_button(button) {
    return internal_mouse_button(button)
}


pub val KEY_ESCAPE = "Escape"
pub val KEY_DIGIT1 = "Digit1"
pub val KEY_DIGIT2 = "Digit2"
pub val KEY_DIGIT3 = "Digit3"
pub val KEY_DIGIT4 = "Digit4"
pub val KEY_DIGIT5 = "Digit5"
pub val KEY_DIGIT6 = "Digit6"
pub val KEY_DIGIT7 = "Digit7"
pub val KEY_DIGIT8 = "Digit8"
pub val KEY_DIGIT9 = "Digit9"
pub val KEY_DIGIT0 = "Digit0"
pub val KEY_MINUS = "Minus"
pub val KEY_EQUAL = "Equal"
pub val KEY_BACKSPACE = "Backspace"
pub val KEY_TAB = "Tab"
pub val KEY_Q = "KeyQ"
pub val KEY_W = "KeyW"
pub val KEY_E = "KeyE"
pub val KEY_R = "KeyR"
pub val KEY_T = "KeyT"
pub val KEY_Y = "KeyY"
pub val KEY_U = "KeyU"
pub val KEY_I = "KeyI"
pub val KEY_O = "KeyO"
pub val KEY_P = "KeyP"
pub val KEY_BRACKET_LEFT = "BracketLeft"
pub val KEY_BRACKET_RIGHT = "BracketRight"
pub val KEY_ENTER = "Enter"
pub val KEY_CONTROL_LEFT = "ControlLeft"
pub val KEY_A = "KeyA"
pub val KEY_S = "KeyS"
pub val KEY_D = "KeyD"
pub val KEY_F = "KeyF"
pub val KEY_G = "KeyG"
pub val KEY_H = "KeyH"
pub val KEY_J = "KeyJ"
pub val KEY_K = "KeyK"
pub val KEY_L = "KeyL"
pub val KEY_SEMICOLON = "Semicolon"
pub val KEY_QUOTE = "Quote"
pub val KEY_BACKQUOTE = "Backquote"
pub val KEY_SHIFT_LEFT = "ShiftLeft"
pub val KEY_BACKSLASH = "Backslash"
pub val KEY_Z = "KeyZ"
pub val KEY_X = "KeyX"
pub val KEY_C = "KeyC"
pub val KEY_V = "KeyV"
pub val KEY_B = "KeyB"
pub val KEY_N = "KeyN"
pub val KEY_M = "KeyM"
pub val KEY_COMMA = "Comma"
pub val KEY_PERIOD = "Period"
pub val KEY_SLASH = "Slash"
pub val KEY_SHIFT_RIGHT = "ShiftRight"
pub val KEY_NUMPAD_MULTIPLY = "NumpadMultiply"
pub val KEY_ALT_LEFT = "AltLeft"
pub val KEY_SPACE = "Space"
pub val KEY_CAPS_LOCK = "CapsLock"
pub val KEY_F1 = "F1"
pub val KEY_F2 = "F2"
pub val KEY_F3 = "F3"
pub val KEY_F4 = "F4"
pub val KEY_F5 = "F5"
pub val KEY_F6 = "F6"
pub val KEY_F7 = "F7"
pub val KEY_F8 = "F8"
pub val KEY_F9 = "F9"
pub val KEY_F10 = "F10"
pub val KEY_PAUSE = "Pause"
pub val KEY_SCROLL_LOCK = "ScrollLock"
pub val KEY_NUMPAD7 = "Numpad7"
pub val KEY_NUMPAD8 = "Numpad8"
pub val KEY_NUMPAD9 = "Numpad9"
pub val KEY_NUMPAD_SUBTRACT = "NumpadSubtract"
pub val KEY_NUMPAD4 = "Numpad4"
pub val KEY_NUMPAD5 = "Numpad5"
pub val KEY_NUMPAD6 = "Numpad6"
pub val KEY_NUMPAD_ADD = "NumpadAdd"
pub val KEY_NUMPAD1 = "Numpad1"
pub val KEY_NUMPAD2 = "Numpad2"
pub val KEY_NUMPAD3 = "Numpad3"
pub val KEY_NUMPAD0 = "Numpad0"
pub val KEY_NUMPAD_DECIMAL = "NumpadDecimal"
pub val KEY_INTL_BACKSLASH = "IntlBackslash"
pub val KEY_F11 = "F11"
pub val KEY_F12 = "F12"
pub val KEY_NUMPAD_EQUAL = "NumpadEqual"
pub val KEY_ARROW_LEFT = "ArrowLeft"
pub val KEY_ARROW_RIGHT = "ArrowRight"
pub val KEY_ARROW_UP = "ArrowUp"
pub val KEY_ARROW_DOWN = "ArrowDown"

pub proc key(key) {
    return internal_key(key)
}