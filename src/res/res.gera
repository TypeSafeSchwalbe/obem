
mod obem::res

use std::(arr, iter)

pub proc on_load(res_loads, load_callback) {
    val loaded = [false; length(res_loads)]
    0..length(res_loads) |> iter::for_each(|i| res_loads[i](|| {
        loaded[i] = true
        case loaded |> arr::iter() |> iter::reduce(|a, b| a && b, true) -> {
            load_callback()
        }
    }))
} 

pub proc loaded(resources) {
    return resources
        |> arr::iter()
        |> iter::map(|res| res .> loaded())
        |> iter::reduce(|a, b| a && b, true)
}


