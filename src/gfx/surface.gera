
mod obem::gfx::Surface

use obem::internal::gfx::Surface::*
use obem::gfx::(Shader, Mesh)
use std::opt

proc create(handle_f) { return {
    handle_v = #none unit,
    handle = |self| {
        case self.handle_v |> opt::is_none()
            -> self.handle_v = #some handle_f()
        return self.handle_v |> opt::expect("should exist")
    },

    width = |self| self .> handle()
        |> internal_surface_width(),
    height = |self| self .> handle()
        |> internal_surface_height(),

    clear_color = |self, r, g, b, a| {
        self .> handle()
            |> internal_clear_color(r, g, b, a)
        return self
    },

    clear_depth = |self, d| {
        self .> handle()
            |> internal_clear_depth(d)
        return self
    },

    draw = |self, mesh, vertex_property_sizes, shader, depth_test| {
        self .> handle()
            |> internal_draw(
                mesh .> handle(),
                vertex_property_sizes,
                shader .> handle(),
                depth_test
            )
        return self
    }
} }

pub proc main() {
    return create(|| internal_main_surface())
}

pub proc new(texture) {
    return create(|| texture .> handle() |> internal_create_surface())
}